<div id = "left"></div>
<div id = "right"></div>
<div class="container">
  <nav class="nav-bar">
    <li>
      <h1><a href="/search/search">QTT</a> <style>a { color: white }</style></h1>
    </li>
    <%= form_tag("/search/search", method: "post",class: "search_box") do %>
      <li>
        <div id ="Solr" >
          <%= label_tag( :solr_1 ,"Production",{}) %>
          <%= radio_button_tag 'solr', 1, (params[:solr] == '1' || !params[:solr])  , :class => "solr_1"%>
          <%= label_tag( :solr_2 ,"UAT",{}) %>
          <%= radio_button_tag 'solr', 2 , params[:solr] == '2', :class => 'solr_2'%>
          <%= label_tag( :solr_3 ,"Hydratest",{}) %>
          <%= radio_button_tag 'solr', 3 , params[:solr] == '3', :class => 'solr_3'%>
        </div>
      </li>
      <li>
        <%= label_tag(:q ,"Search", class: "sr-only" ) %>
        <%= search_field_tag(:q, params[:q]) %>
      </li>
      <li>
        <%= button_tag("Search", :class=>" btn btn-primary") %>
      </li>
      </nav>
    <% end %>

    <script>
    var onNavBarResize = function(){
        $("body").css("padding-top", $(".nav-bar").height() + "px");
    }
    // When the user clicks on the button, scroll to the top of the document
    var ro = new ResizeObserver(
        onNavBarResize
    );
    // Observe one or multiple elements
    ro.observe($(".nav-bar")[0]);
    onNavBarResize();
    </script>

    <% if (defined? @solr_query) && @solr_query != '' && @query && !@landing  %>
      <hr/>
      <h2>Performing Query: </h2>
      <%= @solr_query.nil? ? "No query" : "#{@environment_name}: #{@solr_query} "%>
      <hr />

    <% end %>


    <%doc_counter = 0%>
    <% if (defined? @documents) && @solr_query != '' && @documents != nil && @solr_documents != :query_failed %>
      <%doc_counter += 1%>
      <% if @oid_id_search %>
        <% if @missing_pids != [] || @missing_oids != [] %>
          <h2>Not Found:</h2>
          <%= render partial: "missingmodal" %>
        <% end %>

        <% if @invalid_list.size >0 %>
          <h2>Invalid tokens:</h2>
          <%= @invalid_list.map {|invalid_item| %>
            <% "[ #{invalid_item} ]" %>
          <% }.join(', ')  %>
        <% end %>
      <%end%>

      <table class="table table-striped">
        <thead>
        <tr>
          <th scope="col">clio_id_display</th>
          <th scope="col">title_display</th>
          <th scope="col">author_display</th>
          <th scope="col">isbn_display</th>
          <th scope="col">full_publisher_display</th>
          <th scope="col">location_call_number_id_display</th>
          <th scope="col">Links</th>
        </tr>
        </thead>
        <tbody>
        <% @documents.each { |document | %>
          <%doc_counter += 1 %>
          <% color = doc_counter % 2 == 1? "white" : "grey"%>
            <%ocidoc = document[1]%>
            <%document = document[0]%>
          <tr class="<% if !document.will_display_in_production? %>no-production<% end %> <% if !document.will_display_in_test? %>no-test<% end %>">
            <td class="document-valid" >
              <%= document[:clio_id_display].to_s.tr('""[]','') %><br />
            </td>

            <td class="document-valid">
              <table class="table table-striped under <%=color%>">
                <thead>
                <tr>
                  <th scope="col">SOLR</th>
                  <th scope="col">ORACLE</th>
                </tr>
                </thead>
                <tbody>
                <td><%= document[:title_display].to_s.tr('[]""','')%></td>
                <td><%= ocidoc[:title_display].force_encoding('utf-8').encode unless ocidoc[:title_display].nil?%></td>
                </tbody>
              </table>

            <td class="document-valid">
              <table class="table table-striped under <%=color%>">
                <thead>
                <tr>
                  <th scope="col">SOLR</th>
                  <th scope="col">ORACLE</th>
                </tr>
                </thead>
                <tbody>
                <td><%= document[:author_display].to_s.tr('[]""','')%></td>
                <td><%= ocidoc[:author_display].force_encoding('utf-8').encode unless ocidoc[:author_display].nil?%></td>
                </tbody>
              </table>


            <td class="document-valid">
              <table class="table table-striped under <%=color%>">
                <thead>
                <tr>
                  <th scope="col">SOLR</th>
                  <th scope="col">ORACLE</th>
                </tr>
                </thead>
                <tbody>
                <td><%= document[:isbn_display].to_s.tr('[]""','')%></td>
                <td><%= ocidoc[:isbn_display].force_encoding('utf-8').encode unless ocidoc[:isbn_display].nil?%></td>
                </tbody>
              </table>

            <td class="document-valid">
              <table class="table table-striped under  <%=color%>">
                <thead>
                <tr>
                  <th scope="col">SOLR</th>
                  <th scope="col">ORACLE</th>
                </tr>
                </thead>
                <tbody>
                <td><%= document[:full_publisher_display].to_s.tr('[]""','')%></td>
                <td><%= ocidoc[:full_publisher_display].force_encoding('utf-8').encode unless ocidoc[:full_publisher_display].nil?%></td>
                </tbody>
              </table>


            <td class="document-valid">
              <table class="table table-striped under <%=color%>">
                <thead>
                <tr>
                  <th scope="col">SOLR</th>
                  <th scope="col">ORACLE</th>
                </tr>
                </thead>
                <tbody>
                <td><%= document[:lcation_call_number_id_display].to_s.tr('[]""','')%></td>
                <td></td>
                </tbody>
              </table>


            <td>
              <a class = "Findit btn btn-info"  href="http://search.library.yale.edu/catalog/<%=document[:id].to_s%>?counter=1 ">QS</a>
            </td>
          </tr>
        <%} unless @solr_query == '' %>





    <% elsif !@invalid_list.nil? && @invalid_list.size >0 %>
      <h2>Invalid tokens:</h2>
      <%= @invalid_list.map {|invalid_item| %>
        <% "[ #{invalid_item} ]" %>
      <% }.join(', ')  %>
      <br/>
    <%end%>

    </tbody>

    </tbody>

    </table>

    <% if !@query %>
      <h1>
        <br/>
        Query is Empty!
      </h1>
      <p> Please Enter clio_id_diplays.</p>
    <%end%>

    <% if @landing %>
      <h1>
        <br/>
        Welcome to QTT!
      </h1>
      <p>
        Please enter any ids/clio_id_display into the search field.
      </p>
      <h2>  About </h2>


      <p>QTT is a rails application with no database access.  It uses bootstrap as the HTML framework and JQuery.
        It is used to compare document results between Oracle and SOLR.</p>


    <% end %>
    <% if !@connected && @url && !@url.blank? %>
      ERROR: Unable to query the solr instance at <%=@url%>!
    <%end%>
    <% if @connected && (@solr_documents.empty? || @solr_query == '') %>
      No solr_documents found.
    <% end %>


    </div>


<button onclick="topFunction()" id="scroll_to_top" title="Go to top">â†‘</button>
